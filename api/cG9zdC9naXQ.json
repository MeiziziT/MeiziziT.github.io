{"title":"git","date":"2019-03-13T10:58:14.000Z","slug":"git","comments":true,"updated":"2019-03-13T16:18:56.108Z","content":"<p><img src=\"../image/git/1.png\" alt=\"工作区、版本库中的暂存区和版本库之间的关系\"></p>\n<ul>\n<li>工作区：就是你在电脑里能看到的目录。</li>\n<li>暂存区：英文叫stage, 或index。一般存放在 “.git目录下” 下的index文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。</li>\n<li>版本库：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。</li>\n</ul>\n<p>——————————————————————————————————————————————————————-</p>\n<ul>\n<li>图中</li>\n<li>左侧为=&gt;[工作区]  </li>\n<li>右侧为=&gt;[版本库]=&gt;版本库中<code>index</code>区域是[暂存区]</li>\n<li>objects ==&gt;[对象库]</li>\n</ul>\n<hr>\n<ul>\n<li>objects 标识得区域为Git 得对象库 ，里面创建了各种对象及内容</li>\n<li>[工作区]修改或增加得文件内容 执行<code>git add</code>后 ,[暂存区]的目录更新，<code>修改或增加得文件内容</code> 被写到对象库中新的对象中,而新对象的id被记录到[暂存区]中的<code>index</code>中</li>\n<li><code>git commit</code> 操作  将[暂存区]的目录树 写到 [d对象库] 中 ，master 分支 也会做出相应的更新。</li>\n<li>即 <code>git commit</code> 之后，master 指向的目录 就是 [暂存区]中的目录</li>\n</ul>\n<hr>\n<ul>\n<li><code>git reset HEAD</code> 执行时，[暂存区]的目录会被重写，被master[head] 指向的分支目录所替换。[工作区]目录保持不变</li>\n<li>执行 <code>git rm --cached &lt;file&gt;</code>  将文件从[暂存区] 删除，[工作区]不变</li>\n</ul>\n<h3 id=\"危险操作-慎重\"><a href=\"#危险操作-慎重\" class=\"headerlink\" title=\"危险操作 慎重\"></a>危险操作 慎重</h3><ul>\n<li><p>执行<code>git checkout</code> 或者 <code>git checkout -- &lt;file&gt;</code> 会将 [暂存区]的全部文件和指定文件 替换 [工作区]的文件，操作失误会造成=&gt; 会清除[工作区]未添加到[暂存区]的改动</p>\n</li>\n<li><p>执行<code>git checkout HEAD</code> 或者 <code>git checkout HEAD  -- &lt;file&gt;</code> ,此操作 会将HEAD 所指向的master分支中 全部文件或者指定文件 替换[暂存区]以及[工作区]的文件，操作失误会造成=&gt; 会清除[工作区]，[暂存区]未提交的改动</p>\n<h1 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h1></li>\n<li>安装完git后</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;Your Name&quot;</span><br><span class=\"line\">git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>初始化仓库,</p>\n<p><code>Windows系统，为了避免遇到各种莫名其妙的问题，请确保目录名（包括父目录）不包含中文。</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir gitDemo</span><br><span class=\"line\"><span class=\"built_in\">cd</span> gitDemo</span><br><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p><code>git init</code> 可以直接 <code>git init &lt;dir&gt;</code> 指定创建好的目录</p>\n</li>\n<li><p>将文件添加到<code>版本库中</code>分两步</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add &lt;fileName&gt;</span><br><span class=\"line\">git commit -m  &lt; message &gt;</span><br></pre></td></tr></table></figure>\n<p><code>git add .</code> 可以将所有修改内容的文件<code>一次性</code>从<code>工作区</code> 上传到 <code>暂存区</code><br><code>git commit -m  &lt; message &gt;</code>  将文件修改<code>一次性</code>从<code>暂存区</code> 提交到 <code>当前分支</code></p>\n<h3 id=\"辅助性的命令\"><a href=\"#辅助性的命令\" class=\"headerlink\" title=\"辅助性的命令\"></a>辅助性的命令</h3><ul>\n<li><code>git status</code> 可以知道当前仓库状态<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p><code>git diff</code>  查看文件修改了哪些内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>git log</code> 显示从最近到最远的提交日志</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>git reflog</code> 用来记录每一次的命令</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br></pre></td></tr></table></figure></li>\n</ul>\n","next":{"title":"vue","slug":"vue"},"link":""}